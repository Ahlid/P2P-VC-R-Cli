price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files<-list.files(folder_path)
print(files)
zip(id, files)
}
}
}
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
?mapply
?lapply
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
print(files)
zip(id, files)
}
}
}
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
print(files)
zip(id, unlist(files, use.names=FALSE))
}
}
}
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3.status_code = 200) {
print('Job sucessfully addes.')
}
}
}
}
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3.status_code = 200) {
print('Job sucessfully added.')
}
}
}
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3.status_code = 200) {
print('Job sucessfully added.')
}
}
}
}
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3.status_code = 200) {
print('Job sucessfully added.')
}
}
}
print('end.')
}
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3.status_code == 200) {
print('Job sucessfully added.')
}
}
}
}
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3$status_code == 200) {
print('Job sucessfully added.')
}
}
}
}
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
?POST
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
content_type("application/octet-stream"),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3$status_code == 200) {
print('Job sucessfully added.')
}
}
}
}
?POST
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
listJobs()
addJob <- function(name, exec_file, cpu, disc, ram, price, deadline, folder_path){
if (is.null(user_session_token)) {
stop("NOT LOGGED IN")
}
body <- list(
name = name,
exec_file = exec_file,
CPU = cpu,
disc = disc,
RAM = ram,
price = price,
deadline = deadline
)
r <- PUT(
paste(base_url,'/job/', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = body,
enconde = 'json'
)
if (r$status_code == 200) {
job <- fromJSON(content(r, "text"), flatten = TRUE)
id <- job$id
print("Job added.")
View(as.data.frame(job), 'Job created')
print('Saving current environment data')
RData_filename = paste(id,"_input.RData", sep="")
save.image(RData_filename)
print('Sending environment data')
r2 <- POST(paste(base_url,'/job/',id,'/data', sep = ''),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(RData_filename))
if (r2$status_code == 200) {
unlink(RData_filename)
print('Environment data sent, zipping code folder')
files <- list.files(folder_path)
files <- lapply(files, function(file){return(paste(folder_path,file, sep = '/'))})
zip(id, unlist(files, use.names=FALSE))
print('Sending code')
r3 <- POST(paste(base_url,'/job/',id,'/code', sep = ''),
content_type("application/octet-stream"),
add_headers(Authorization = paste('Bearer',user_session_token)),
body = upload_file(paste(id,'zip', sep = '.')))
if (r3$status_code == 200) {
print('Job sucessfully added.')
unlink(paste(id,'zip', sep = '.'))
}
}
}
}
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
?sandbox
install.packages("sandboxR")
listJobs()
listJobs()
listJobs(2)
listJobs(1)
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
listJobs(2)
listJobs(1)
listJobs(2)
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
listJobs(2)
listJobs(1)
listJobs(page = 2)
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
addJob("myTestJob","main.R", NULL, 100, 100, 15, paste(Sys.time()+ 2 * 24 * 60 *60 ,'', sep=''), 'C:/Users/Tiago/Documents/P2P-VC-R/Client/fibonacci' )
listJobs(page = 2)
listJobs(page = 1)
user_session_token
listJobs(page = 2)
